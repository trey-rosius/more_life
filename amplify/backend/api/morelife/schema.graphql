type Comment @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID"]) @key(name: "byPost", fields: ["postID"]) {
  id: ID!
  commentText: String!
  createdOn: AWSDateTime
  updatedOn: AWSDateTime
  userID: ID
  postID: ID
  post: Post @connection
  user: User @connection
}

enum ChatItemTyp {
  TEXT
  IMAGE
}

type ChatItem @model @auth(rules: [{allow: public}]) @key(name: "byChat", fields: ["chatID"]) {
  id: ID!
  senderId: String!
  receiverId: String!
  message: String
  imageUrl: String
  chatItemType: ChatItemTyp!
  chatID: ID
  createdOn: AWSTimestamp
  chat: Chat @connection
}

type Chat @model @auth(rules: [{allow: public}]) {
  id: ID!
  receiverId: String!
  senderId: String!
  createdOn: AWSDateTime
  updatedOn: AWSDateTime
  chatItems: [ChatItem] @connection(keyName: "byChat", fields: ["id"])
  users: [UserChat] @connection(keyName: "byChat", fields: ["id"])
}

enum PostStatus {
  CREATED
  UPDATED
  DELETED
}

enum PostTyp {
  TEXT
  IMAGE
}

type Post @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  content: String!
  postImageUrl: String
  postType: PostTyp!
  postStatus: PostStatus
  userID: ID
  createdOn: AWSDateTime
  updatedOn: AWSDateTime
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
  user: User @connection
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  firstName: String!
  lastName: String!
  isVerified: Boolean!
  profilePicUrl: String
  email: String!
  post: [Post] @connection(keyName: "byUser", fields: ["id"])
  userChats: [UserChat] @connection(keyName: "byUser", fields: ["id"])
  createdOn: AWSDateTime
  updatedOn: AWSDateTime
  comments: [Comment] @connection(keyName: "byUser", fields: ["id"])
}

type UserChat @model(queries: null) @key(name: "byUser", fields: ["userID", "chatID"]) @key(name: "byChat", fields: ["chatID", "userID"]) @auth(rules: [{allow: public}, {allow: public}]) {
  id: ID!
  userID: ID!
  chatID: ID!
  user: User! @connection(fields: ["userID"])
  chat: Chat! @connection(fields: ["chatID"])
}
 